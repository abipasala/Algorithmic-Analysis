# -*- coding: utf-8 -*-
"""AA_Lab2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uMSrjRx4YocurSqfcTsMyumznVaF8oV4
"""

def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        # Move elements greater than key one position ahead
        while j >= 0 and arr[j] > key:
            arr[j+1] = arr[j]
            j -= 1
        arr[j+1] = key
    return arr


# Example usage
arr = [29, 10, 14, 37, 13]
print("Original:", arr)
print("Sorted (Insertion Sort):", insertion_sort(arr))

class Stack:
    def __init__(self):
        self.stack = []

    def push(self, item):
        self.stack.append(item)

    def pop(self):
        if not self.is_empty():
            return self.stack.pop()
        return "Stack Underflow"

    def peek(self):
        if not self.is_empty():
            return self.stack[-1]
        return "Stack is empty"

    def is_empty(self):
        return len(self.stack) == 0

    def size(self):
        return len(self.stack)


# Example usage
s = Stack()
s.push(10)
s.push(20)
s.push(30)

print("Top element:", s.peek())     # 30
print("Stack size:", s.size())      # 3
print("Popped:", s.pop())           # 30
print("Is empty?", s.is_empty())    # False